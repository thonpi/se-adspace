services:
  # Reverse Proxy / Load Balancer (entry point)
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      - frontend
      - backend-1
      - backend-2
      - backend-3
    networks:
      - frontend-network
      - backend-network
    restart: always

  # Frontend Service
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env.production
    environment:
      - NODE_ENV=production
    networks:
      - frontend-network
    restart: always

  # Backend services behind the load balancer
  backend-1:
    build: ./backend
    container_name: backend-1
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env.production
    environment:
      - NODE_ENV=production
      - PORT=3001
    networks:
      - backend-network
      - frontend-network
    restart: always

  backend-2:
    build: ./backend
    container_name: backend-2
    ports:
      - "3002:3002"
    env_file:
      - ./backend/.env.production
    environment:
      - NODE_ENV=production
      - PORT=3002
    networks:
      - backend-network
      - frontend-network
    restart: always

  backend-3:
    build: ./backend
    container_name: backend-3
    ports:
      - "3003:3003"
    env_file:
      - ./backend/.env.production
    environment:
      - NODE_ENV=production
      - PORT=3003
    networks:
      - backend-network
      - frontend-network
    restart: always

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  nginx-cache:
